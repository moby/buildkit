name: dockerd

on:
  # TODO: add event to build on command in PR (e.g., /test-dockerd)
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker version'
        required: true
        default: '20.10.19'

env:
  REPO_SLUG_ORIGIN: "moby/buildkit:latest"
  CACHE_GHA_SCOPE_IT: "integration-tests"
  CACHE_GHA_SCOPE_BINARIES: "binaries"
  TESTFLAGS: "-v --parallel=1 --timeout=30m"
  BUILDX_VERSION: "v0.9.1"  # leave empty to use the one available on GitHub virtual environment

jobs:
  prepare:
    runs-on: ubuntu-20.04
    steps:
      -
        name: Check version
        run: |
          version=${{ github.event.inputs.version }}
          if [ -z "$version" ]; then
            version=20.10.19
          fi
          echo "DOCKER_VERSION=$version" >> $GITHUB_ENV
      -
        name: Check build
        uses: actions/github-script@v6
        id: build
        with:
          result-encoding: string
          script: |
            try {
              new URL("${{ env.DOCKER_VERSION }}");
            } catch (e) {
              return false;
            }
            return true;
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Build
        if: steps.build.outputs.result == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.DOCKER_VERSION }}
          target: binary
          outputs: /tmp/moby
      -
        name: Rename binary
        if: steps.build.outputs.result == 'true'
        run: |
          if [ -L "/tmp/moby/binary-daemon/dockerd" ]; then
            mv -f $(readlink /tmp/moby/binary-daemon/dockerd) /tmp/moby/dockerd
          fi
      -
        name: Download
        if: steps.build.outputs.result != 'true'
        run: |
          mkdir -p /tmp/moby
          cd /tmp/moby
          wget -qO- "https://download.docker.com/linux/static/stable/x86_64/docker-${{ env.DOCKER_VERSION }}.tgz" | tar xvz --strip 1
      -
        name: Upload dockerd
        uses: actions/upload-artifact@v3
        with:
          name: dockerd
          path: /tmp/moby/dockerd
          if-no-files-found: error

  test:
    runs-on: ubuntu-20.04
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        worker:
          - dockerd
          - dockerd-containerd
        pkg:
          - ./client
          - ./cmd/buildctl
          - ./solver
          - ./frontend
          - ./frontend/dockerfile
        typ:
          - integration
        include:
          - pkg: ./...
            skip-integration-tests: 1
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver-opts: image=${{ env.REPO_SLUG_ORIGIN }}
          buildkitd-flags: --debug
      -
        name: Download dockerd
        uses: actions/download-artifact@v3
        with:
          name: dockerd
          path: ./build/
      -
        name: Fix dockerd perms
        run: |
          chmod +x ./build/dockerd
      -
        name: Test
        run: |
          ./hack/test ${{ matrix.typ }}
        env:
          TEST_DOCKERD: "1"
          TEST_DOCKERD_BINARY: "./build/dockerd"
          TESTPKGS: "${{ matrix.pkg }}"
          TESTFLAGS: "${{ env.TESTFLAGS }} --run=//worker=${{ matrix.worker }}$"
          SKIP_INTEGRATION_TESTS: "${{ matrix.skip-integration-tests }}"
          CACHE_FROM: "type=gha,scope=${{ env.CACHE_GHA_SCOPE_IT }} type=gha,scope=${{ env.CACHE_GHA_SCOPE_BINARIES }}"
